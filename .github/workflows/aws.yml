
on:
  pull_request:
    types: [opened, synchronize, reopened]
  
name: Deploy branch

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Extract pull request number
      shell: bash
      run: echo "##[set-output name=number;]$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)"
      id: pull_request

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest 
        ECR_REPOSITORY: hello-world-app
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: cdk deploy
      uses: youyo/aws-cdk-github-actions@v1
      with:
        cdk_subcommand: "deploy HisingenHackathonServiceStack-${{ steps.pull_request.outputs.number }} --require-approval never"
        actions_comment: false
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'eu-west-1'
        BRANCH_SUFFIX: ${{ steps.pull_request.outputs.number  }}

    - name: Extract service link
      shell: bash
      run: echo "##[set-output name=link;]$(echo $(aws cloudformation describe-stacks --stack-name HisingenHackathonServiceStack-${{ steps.pull_request.outputs.number }} --query 'Stacks[0].Outputs[*].OutputValue' | grep http))"
      env:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
      id: service_url

    - name: Comment a pull_request
      uses: mb2dev/github-action-comment-pull-request@1.0.0
      with:
        message: ${{ steps.service_url.outputs.link }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        reactions: "confused | rocket"